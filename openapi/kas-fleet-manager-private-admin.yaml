openapi: 3.0.0
info:
  title: Kafka Service Fleet Manager Admin APIs
  description: The admin APIs for the fleet manager of Kafka service
  version: 0.2.0
  license:
    name: 'Apache 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  contact: 
    name: 'Red Hat Hybrid Cloud Console'
    email: 'rhosak-support@redhat.com'
servers:
  - url: https://api.openshift.com
    description: Main (production) server
  - url: https://api.stage.openshift.com
    description: Staging server
  - url: http://localhost:8000
    description: localhost
  - url: /
    description: current domain
tags:
  - name: Admin APIs
    description: ""

paths:
  '/api/kafkas_mgmt/v1/admin/kafkas':
    get:
      description: Returns a list of Kafkas
      operationId: getKafkas
      security:
        - Bearer: []
      responses:
        "200":
          description: Return a list of Kafka instances. This endpoint will return all Kafka instances that are stored in the database and the are not filtered based on user ids or org ids.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaList'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "401":
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "403":
          description: User is not authorised to access the service
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "500":
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
      parameters:
        - $ref: 'kas-fleet-manager.yaml#/components/parameters/page'
        - $ref: 'kas-fleet-manager.yaml#/components/parameters/size'
        - $ref: 'kas-fleet-manager.yaml#/components/parameters/orderBy'
        - $ref: 'kas-fleet-manager.yaml#/components/parameters/search'
  '/api/kafkas_mgmt/v1/admin/kafkas/{id}':
    get:
      description: Return the details of Kafka instance by id
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      security:
        - Bearer: []
      operationId: getKafkaById
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kafka'
          description: Kafka found by ID
        "401":
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "403":
          description: User is not authorised to access the service
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "404":
          description: No Kafka found with the specified ID
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "500":
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
    patch:
      description: Update a Kafka instance by id
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      security:
        - Bearer: []
      operationId: updateKafkaById
      requestBody:
        description: Kafka update data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaUpdateRequest'
        required: true
      responses:
        "200":
          description: Kafka updated by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kafka'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "401":
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "403":
          description: User is not authorised to access the service
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "404":
          description: No Kafka found with the specified ID
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "500":
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
    delete:
      description: Delete a Kafka by ID
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
        - in: query
          name: async
          description: Perform the action in an asynchronous manner
          schema:
            type: boolean
          required: true
      security:
        - Bearer: [ ]
      operationId: deleteKafkaById
      responses:
        "200":
          description: Kafka updated by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kafka'
        "401":
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "403":
          description: User is not authorised to access the service
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "404":
          description: No Kafka found with the specified ID
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "500":
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
  '/api/kafkas_mgmt/v1/admin/kafkas/{id}/revoke_tls_certificate':
    post:
      description: Revokes the automatically generated TLS wildcard certificate for the Kafka instance by id
      parameters:
        - $ref: "kas-fleet-manager.yaml#/components/parameters/id"
      security:
        - Bearer: []
      operationId: revokeKafkaTLSCertificateBKafkaID
      requestBody:
        description: Kafka certificate revocation request payload. 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkacertificateRevocationRequest'
        required: true
      responses:
        "204":
          description: Kafka certificate successfully revoked
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "401":
          description: Auth token is invalid
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "403":
          description: User is not authorised to access the service
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "404":
          description: No Kafka found with the specified ID
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'
        "500":
          description: Unexpected error occurred
          content:
            application/json:
              schema:
                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'

components:
  schemas:
    Kafka:
      allOf:
        - $ref: 'kas-fleet-manager.yaml#/components/schemas/ObjectReference'
        - required:
          - multi_az
          - strimzi_upgrading
          - kafka_upgrading
          - kafka_ibp_upgrading
        - type: object
          properties:
            status:
              description: "Values: [accepted, preparing, provisioning, ready, failed, deprovision, deleting] "
              type: string
            cloud_provider:
              description: "Name of Cloud used to deploy. For example AWS"
              type: string
            multi_az:
              type: boolean
            region:
              description: "Values will be regions of specific cloud provider. For example: us-east-1 for AWS"
              type: string
            owner:
              type: string
            name:
              type: string
            bootstrap_server_host:
              type: string
            created_at:
              format: date-time
              type: string
            updated_at:
              format: date-time
              type: string
            failed_reason:
              type: string
            actual_kafka_version:
              type: string
            actual_strimzi_version:
              type: string
            desired_kafka_version:
              type: string
            desired_strimzi_version:
              type: string
            desired_kafka_ibp_version:
              type: string
            actual_kafka_ibp_version:
              type: string
            kafka_upgrading:
              type: boolean
            strimzi_upgrading:
              type: boolean
            kafka_ibp_upgrading:
              type: boolean
            organisation_id:
              type: string
            subscription_id:
              type: string
            owner_account_id:
              type: string
            account_number:
              type: string
            instance_type:
              type: string
            quota_type:
              type: string
            routes:
              type: array
              items:
                type: object
                properties:
                  domain:
                    type: string
                  router:
                    type: string
            routes_created:
              type: boolean
            cluster_id:
              type: string
            namespace:
              type: string
            size_id:
              type: string
            max_data_retention_size:
              $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'
    KafkaList:
      allOf:
        - $ref: "kas-fleet-manager.yaml#/components/schemas/List"
        - type: object
          required: [ items ]
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/Kafka"

    KafkaUpdateRequest:
      type: object
      properties:
        # for now only support updating the following fields. May add more when use cases arise.
        strimzi_version:
          type: string
        kafka_version:
          type: string
        kafka_ibp_version:
          type: string
        max_data_retention_size:
          description: "Maximum data storage available to this Kafka"
          type: string
        suspended:
          description: boolean value indicating whether kafka should be suspended or not depending on the value provided. Suspended kafkas have their certain resources removed and become inaccessible until fully unsuspended (restored to Ready state).
          nullable: true
          type: boolean
    SupportedKafkaSizeBytesValueItem:
      $ref: 'kas-fleet-manager.yaml#/components/schemas/SupportedKafkaSizeBytesValueItem'
    KafkacertificateRevocationRequest:
      type: object
      properties:
        revocation_reason:
          type: integer
          description: The certificate revocation reason. See https://www.rfc-editor.org/rfc/rfc5280#section-5.3.1 for the available reasons
      example:
        revocation_reason: 1 # key comprosised revocation reason
        

  securitySchemes:
    Bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
